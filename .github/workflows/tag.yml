name: Create tag

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.read_toml.outputs.value }}
    steps:
      - uses: actions/checkout@v3
      - name: Read TOML
        uses: SebRollen/toml-action@v1.0.2
        id: read_toml
        with:
          file: 'core/pyproject.toml'
          field: 'project.version'
      - name: Publish tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: "${{steps.read_toml.outputs.value}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          id: publish_tag
          run: echo "::set-output name=tag::${{ steps.read_toml.outputs.value }}"

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "commit-hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get timestamp
        id: get-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_OUTPUT

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REPOSITORY:$IMAGE_TAG